{
    "openapi": "3.0.0",
    "info": {
        "title": "News Aggregator API",
        "description": "API Documentation for fetching and managing news articles.",
        "version": "1.0.0"
    },
    "paths": {
        "/api/articles/fetch": {
            "get": {
                "tags": [
                    "Articles"
                ],
                "summary": "Fetch and aggregate articles",
                "description": "Fetches articles from multiple external APIs and stores them in the database.",
                "operationId": "8c98ed0fadc77db9f5a1340dd06059ab",
                "responses": {
                    "200": {
                        "description": "Articles fetched and stored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "status": "success",
                                    "message": "Articles fetched and stored successfully",
                                    "articles_fetched": 150
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "status": "error",
                                    "message": "Failed to fetch articles"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "status": "error",
                                    "message": "Invalid parameters provided"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/articles": {
            "get": {
                "tags": [
                    "Articles"
                ],
                "summary": "Fetch articles from external APIs",
                "description": "Fetches articles from different sources like NewsAPI, Guardian, and New York Times based on the provided source parameter.",
                "operationId": "89181b74a8aa4d580750ede6aa32f92a",
                "parameters": [
                    {
                        "name": "source",
                        "in": "query",
                        "description": "The source to fetch articles from (e.g., 'newsapi', 'guardian', 'newyorktimes').",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "newsapi"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Optional search keyword to filter articles.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "technology"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Articles fetched successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "title": {
                                                "type": "string",
                                                "example": "Sample Article Title"
                                            },
                                            "author": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "source": {
                                                "type": "string",
                                                "example": "newsapi"
                                            },
                                            "published_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-11-24T10:00:00Z"
                                            },
                                            "url": {
                                                "type": "string",
                                                "example": "https://example.com/article"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid source parameter or missing source.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to fetch articles"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error while fetching articles.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while fetching articles"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/articles/{id}": {
            "get": {
                "tags": [
                    "Articles"
                ],
                "summary": "Fetch a single article from a specified source",
                "description": "Retrieve the details of a single article by its ID from a specific source. \n     *                  Supported sources include 'newsapi', 'guardian', and 'nyt' (New York Times).",
                "operationId": "126f0079c2def3834cf2c4a2456d16f9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique identifier of the article to be fetched.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "The source from which to fetch the article. Valid values: 'newsapi', 'guardian', 'nyt'.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "newsapi",
                                "guardian",
                                "nyt"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Article details retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "The ID of the article.",
                                            "type": "string"
                                        },
                                        "title": {
                                            "description": "The title of the article.",
                                            "type": "string"
                                        },
                                        "content": {
                                            "description": "The content/body of the article.",
                                            "type": "string"
                                        },
                                        "source": {
                                            "description": "The source of the article.",
                                            "type": "string"
                                        },
                                        "author": {
                                            "description": "The author of the article.",
                                            "type": "string"
                                        },
                                        "published_at": {
                                            "description": "The publication date of the article.",
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. Possible reasons: missing or invalid 'source' parameter.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message explaining the issue.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Article not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message indicating the article was not found.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error while fetching the article.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message indicating an internal server issue.",
                                            "type": "string"
                                        },
                                        "error": {
                                            "description": "Detailed error information.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Registers a new user by validating the input fields, creating the user record in the database, and generating an API token.",
                "operationId": "0903f2e0df1a8857bee538fc055417f0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "The name of the user.",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "email": {
                                        "description": "The email address of the user. Must be unique.",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "The password for the user account. Must be at least 8 characters.",
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 8
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation. Must match the password.",
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "description": "The registered user's details.",
                                            "type": "object"
                                        },
                                        "token": {
                                            "description": "The API token for the registered user.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors for the input fields.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Details of the validation errors.",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login a user",
                "description": "Authenticates a user with their email and password. Returns the user's details along with an API token upon successful login.",
                "operationId": "2dd578ff7aba2721293dac66833b27d1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "The email address of the user.",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "The password for the user account.",
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "description": "Details of the authenticated user.",
                                            "type": "object"
                                        },
                                        "token": {
                                            "description": "API token for the user.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors for the input fields.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Validation error details.",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access due to invalid credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Unauthorized error message.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout a user",
                "description": "Logs out the authenticated user by revoking their current API token.",
                "operationId": "68a6108af04af5e3bc1ea68a6c6f1299",
                "responses": {
                    "200": {
                        "description": "User logged out successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized if the user is not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/password/email": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send Password Reset Link",
                "description": "Sends a password reset link to the user's email address if the email is registered.",
                "operationId": "4f2e748c9c87bd82791fbe0fb38ca68c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "The email address associated with the user's account.",
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset link sent successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Reset link sent to your email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed for the provided input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Details of the validation errors.",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error or failure to send reset link.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unable to send reset link"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/password/reset": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset User Password",
                "description": "Allows users to reset their password using a valid reset token, email, and new password. \n     *                  The new password must meet the specified criteria and be confirmed.",
                "operationId": "abd2d91b833a547e6a5d4f33b42e701b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "token": {
                                        "description": "The password reset token received by the user.",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "The email address associated with the user's account.",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "The new password for the user. Must be at least 8 characters and confirmed.",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "description": "The confirmation of the new password. Must match the 'password' field.",
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password has been reset successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password has been reset"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed for the provided input.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Details of the validation errors.",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error or failure to reset the password.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to reset password"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/user/preferences": {
            "get": {
                "tags": [
                    "User Preferences"
                ],
                "summary": "Retrieve user preferences",
                "description": "Fetches the saved preferences for the authenticated user, including selected news sources, categories, and authors.",
                "operationId": "4d33d3328eae150fa4bf17acaaa202e3",
                "responses": {
                    "200": {
                        "description": "Preferences retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "news_sources": {
                                                    "description": "Array of preferred news sources",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "newsapi"
                                                    }
                                                },
                                                "categories": {
                                                    "description": "Array of preferred categories",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "technology"
                                                    }
                                                },
                                                "authors": {
                                                    "description": "Array of preferred authors",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No preferences found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No preferences found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Preferences"
                ],
                "summary": "Save user preferences",
                "description": "Stores or updates the authenticated user's preferences, including preferred news sources, categories, and authors.",
                "operationId": "01e33fa27ae7561e97500a3587b87b98",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "news_sources": {
                                        "description": "Array of preferred news sources",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "newsapi"
                                        }
                                    },
                                    "categories": {
                                        "description": "Array of preferred categories",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "technology"
                                        }
                                    },
                                    "authors": {
                                        "description": "Array of preferred authors",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "John Doe"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Preferences saved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Preferences saved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "news_sources": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "newsapi"
                                                    ]
                                                },
                                                "categories": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "technology"
                                                    ]
                                                },
                                                "authors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "John Doe"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "news_sources": [
                                                    "The news sources field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/user/personalized-feed": {
            "get": {
                "tags": [
                    "User Preferences"
                ],
                "summary": "Generate a personalized news feed",
                "description": "Fetches personalized news articles based on the user's preferences, such as news sources, categories, and authors. Aggregates data from multiple external APIs.",
                "operationId": "6a3fd2604378233b6b82166bf28ee72b",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of articles per page (default: 10)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page number (default: 1)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Personalized articles retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Array of personalized articles.",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "total": {
                                            "description": "Total number of articles.",
                                            "type": "integer",
                                            "example": 100
                                        },
                                        "per_page": {
                                            "description": "Articles per page.",
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "current_page": {
                                            "description": "Current page number.",
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or missing preferences.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User preferences not set"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while fetching articles."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Exception message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Articles",
            "description": "Articles"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "User Preferences",
            "description": "User Preferences"
        }
    ]
}